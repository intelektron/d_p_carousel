<?php

/**
 * @file
 * Contains d_paragraphs_text_blocks.module..
 */

/**
 * Implements hook_theme().
 */
function d_p_carousel_theme($existing, $type, $theme, $path)
{
  return [
    'paragraph__d_p_carousel' => [
      'base hook' => 'paragraph',
    ],
    'paragraph__d_p_carousel_item' => [
      'base hook' => 'paragraph',
    ],
    'field__field_d_p_cs_item_reference' => [
      'base hook' => 'field',
    ],
  ];
}

/**
 * Implements hook_preprocess_field().
 */
function d_p_carousel_preprocess_field(&$variables)
{
  if ($variables['element']['#entity_type'] == 'paragraph') {
    if ($variables['element']['#bundle'] == 'd_p_carousel') {
      if ($variables['field_name'] == 'field_d_p_cs_item_reference') {
        $num_array = $variables['element']['#object']->get('field_d_number')->getValue();
        $variables['column_class'] = 'col-sm-4';
        if (!empty($num_array[0]['value'])) {
          $columns = floor(12 / $num_array[0]['value']);
          $variables['column_class'] = 'col-sm-' . $columns;
          $id = $variables['element']['#object']->id();
          $variables['#attached']['drupalSettings']['d_p_carousel'][$id]['columns'] = $num_array[0]['value'];
        }
      }
    }
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function d_p_carousel_preprocess_paragraph(&$variables)
{
  $paragraph = $variables['paragraph'];
  $bundle = $paragraph->bundle();

  switch ($bundle) {
    case 'd_p_carousel':
      $variables['#attached']['library'][] = 'd_p_carousel/slick';
      $variables['#attached']['library'][] = 'd_p_carousel/d_p_carousel';
      $variables['#attached']['drupalSettings']['d_p_carousel']['xs'] = 540;
      $variables['attributes']['data-id'][] = $variables['paragraph']->id();
      break;
    case 'd_p_carousel_item':
      $link = $paragraph->get('field_d_cta_link')->first();
      if (!is_null($link)) {
        $variables['has_link'] = true;
        $variables['attributes']['href'][] = $link->getUrl()->toString();
      }
      else {
        $variables['has_link'] = false;
      }
      break;
  }
}


